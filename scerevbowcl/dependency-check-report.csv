"Project","ScanDate","DependencyName","DependencyPath","Description","License","Md5","Sha1","Identifiers","CPE","CVE","CWE","Vulnerability","Source","CVSSv2_Severity","CVSSv2_Score","CVSSv2","CVSSv3_BaseSeverity","CVSSv3_BaseScore","CVSSv3","CPE Confidence","Evidence Count"
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ajv:6.10.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\ajv:6.10.0,Another JSON Schema Validator,MIT,"","",pkg:npm/ajv@6.10.0,cpe:2.3:a:ajv.js:ajv:6.10.0:*:*:*:*:*:*:*,CVE-2020-15366,CWE-20 Improper Input Validation,"An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",OSSINDEX,MEDIUM,5.6,/AV:N/AC:H/Au:/C:L/I:L/A:L,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ajv:6.10.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?@angular-devkit\core:8.3.26\ajv:6.10.2,Another JSON Schema Validator,MIT,"","",pkg:npm/ajv@6.10.2,cpe:2.3:a:ajv.js:ajv:6.10.2:*:*:*:*:*:*:*,CVE-2020-15366,CWE-20 Improper Input Validation,"An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",OSSINDEX,MEDIUM,5.6,/AV:N/AC:H/Au:/C:L/I:L/A:L,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ajv:6.12.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?angular-datatables:9.0.2\ajv:6.12.0,Another JSON Schema Validator,MIT,"","",pkg:npm/ajv@6.12.0,cpe:2.3:a:ajv.js:ajv:6.12.0:*:*:*:*:*:*:*,CVE-2020-15366,CWE-20 Improper Input Validation,"An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",OSSINDEX,MEDIUM,5.6,/AV:N/AC:H/Au:/C:L/I:L/A:L,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ajv:6.12.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?webpack:4.43.0\ajv:6.12.2,Another JSON Schema Validator,MIT,"","",pkg:npm/ajv@6.12.2,cpe:2.3:a:ajv.js:ajv:6.12.2:*:*:*:*:*:*:*,CVE-2020-15366,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,"An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,MEDIUM,5.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ajv:6.12.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?webpack:4.43.0\ajv:6.12.2,Another JSON Schema Validator,MIT,"","",pkg:npm/ajv@6.12.2,cpe:2.3:a:ajv.js:ajv:6.12.2:*:*:*:*:*:*:*,1067946,"","An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ansi-html:0.0.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\ansi-html:0.0.7,An elegant lib that converts the chalked (ANSI) text to HTML.,Apache-2.0,"","",pkg:npm/ansi-html@0.0.7,cpe:2.3:a:ansi-html_project:ansi-html:0.0.7:*:*:*:*:*:*:*,CVE-2021-23424,NVD-CWE-noinfo,"This affects all versions of package ansi-html. If an attacker provides a malicious string, it will get stuck processing the input for an extremely long time.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ansi-html:0.0.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\ansi-html:0.0.7,An elegant lib that converts the chalked (ANSI) text to HTML.,Apache-2.0,"","",pkg:npm/ansi-html@0.0.7,cpe:2.3:a:ansi-html_project:ansi-html:0.0.7:*:*:*:*:*:*:*,1070006,"","This affects all versions of package ansi-html. If an attacker provides a malicious string, it will get stuck processing the input for an extremely long time.",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ansi-regex:3.0.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?string-width:2.1.1\ansi-regex:3.0.0,Regular expression for matching ANSI escape codes,MIT,"","",pkg:npm/ansi-regex@3.0.0,cpe:2.3:a:ansi-regex_project:ansi-regex:3.0.0:*:*:*:*:*:*:*,CVE-2021-3807,NVD-CWE-Other,ansi-regex is vulnerable to Inefficient Regular Expression Complexity,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:N/I:N/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ansi-regex:3.0.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?string-width:2.1.1\ansi-regex:3.0.0,Regular expression for matching ANSI escape codes,MIT,"","",pkg:npm/ansi-regex@3.0.0,cpe:2.3:a:ansi-regex_project:ansi-regex:3.0.0:*:*:*:*:*:*:*,1070273,"",ansi-regex is vulnerable to Inefficient Regular Expression Complexity,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ansi-regex:4.1.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?inquirer:6.3.1\ansi-regex:4.1.0,Regular expression for matching ANSI escape codes,MIT,"","",pkg:npm/ansi-regex@4.1.0,cpe:2.3:a:ansi-regex_project:ansi-regex:4.1.0:*:*:*:*:*:*:*,CVE-2021-3807,NVD-CWE-Other,ansi-regex is vulnerable to Inefficient Regular Expression Complexity,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:N/I:N/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ansi-regex:4.1.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?inquirer:6.3.1\ansi-regex:4.1.0,Regular expression for matching ANSI escape codes,MIT,"","",pkg:npm/ansi-regex@4.1.0,cpe:2.3:a:ansi-regex_project:ansi-regex:4.1.0:*:*:*:*:*:*:*,1070274,"",ansi-regex is vulnerable to Inefficient Regular Expression Complexity,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ansi-regex:5.0.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?ora:4.0.3\ansi-regex:5.0.0,Regular expression for matching ANSI escape codes,MIT,"","",pkg:npm/ansi-regex@5.0.0,cpe:2.3:a:ansi-regex_project:ansi-regex:5.0.0:*:*:*:*:*:*:*,CVE-2021-3807,NVD-CWE-Other,ansi-regex is vulnerable to Inefficient Regular Expression Complexity,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:N/I:N/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ansi-regex:5.0.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?ora:4.0.3\ansi-regex:5.0.0,Regular expression for matching ANSI escape codes,MIT,"","",pkg:npm/ansi-regex@5.0.0,cpe:2.3:a:ansi-regex_project:ansi-regex:5.0.0:*:*:*:*:*:*:*,1070275,"",ansi-regex is vulnerable to Inefficient Regular Expression Complexity,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",async:2.6.3,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\async:2.6.3,Higher-order functions and common patterns for asynchronous code,MIT,"","",pkg:npm/async@2.6.3,cpe:2.3:a:async_project:async:2.6.3:*:*:*:*:*:*:*,CVE-2021-43138,CWE-1321,"In Async before 2.6.4 and 3.x before 3.2.2, a malicious user can obtain privileges via the mapValues() method, aka lib/internal/iterator.js createObjectIterator prototype pollution.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.8,CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",async:2.6.3,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\async:2.6.3,Higher-order functions and common patterns for asynchronous code,MIT,"","",pkg:npm/async@2.6.3,cpe:2.3:a:async_project:async:2.6.3:*:*:*:*:*:*:*,1070206,"","A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the `mapValues()` method.",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",browserslist:4.10.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?@angular-devkit\build-angular:0.803.26\browserslist:4.10.0,"Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-env-preset",MIT,"","",pkg:npm/browserslist@4.10.0,cpe:2.3:a:browserslist_project:browserslist:4.10.0:*:*:*:*:*:*:*,CVE-2021-23364,NVD-CWE-Other,The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",browserslist:4.10.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?@angular-devkit\build-angular:0.803.26\browserslist:4.10.0,"Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-env-preset",MIT,"","",pkg:npm/browserslist@4.10.0,cpe:2.3:a:browserslist_project:browserslist:4.10.0:*:*:*:*:*:*:*,1067902,"",The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.,NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",browserslist:4.11.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?@babel\helper-compilation-targets:7.8.7\browserslist:4.11.0,"Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-env-preset",MIT,"","",pkg:npm/browserslist@4.11.0,cpe:2.3:a:browserslist_project:browserslist:4.11.0:*:*:*:*:*:*:*,CVE-2021-23364,NVD-CWE-Other,The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",browserslist:4.8.6,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\browserslist:4.8.6,"Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-env-preset",MIT,"","",pkg:npm/browserslist@4.8.6,cpe:2.3:a:browserslist_project:browserslist:4.8.6:*:*:*:*:*:*:*,CVE-2021-23364,NVD-CWE-Other,The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",datatables.net:1.10.21,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\datatables.net:1.10.21,DataTables for jQuery,MIT,"","",pkg:npm/datatables.net@1.10.21,cpe:2.3:a:datatables:datatables.net:1.10.21:*:*:*:*:*:*:*,CVE-2020-28458,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,All versions of package datatables.net are vulnerable to Prototype Pollution due to an incomplete fix for https://snyk.io/vuln/SNYK-JS-DATATABLESNET-598806.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,HIGH,7.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",datatables.net:1.10.21,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\datatables.net:1.10.21,DataTables for jQuery,MIT,"","",pkg:npm/datatables.net@1.10.21,cpe:2.3:a:datatables:datatables.net:1.10.21:*:*:*:*:*:*:*,1068292,"",All versions of package datatables.net are vulnerable to Prototype Pollution due to an incomplete fix for https://snyk.io/vuln/SNYK-JS-DATATABLESNET-598806.,NPM,"","","","","","",HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",datatables.net:1.10.21,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\datatables.net:1.10.21,DataTables for jQuery,MIT,"","",pkg:npm/datatables.net@1.10.21,cpe:2.3:a:datatables:datatables.net:1.10.21:*:*:*:*:*:*:*,CVE-2021-23445,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),This affects the package datatables.net before 1.11.3. If an array is passed to the HTML escape entities function it would not have its contents escaped.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",datatables.net:1.10.21,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\datatables.net:1.10.21,DataTables for jQuery,MIT,"","",pkg:npm/datatables.net@1.10.21,cpe:2.3:a:datatables:datatables.net:1.10.21:*:*:*:*:*:*:*,1067614,"",This affects the package datatables.net before 1.11.3. If an array is passed to the HTML escape entities function it would not have its contents escaped.,NPM,"","","","","","",HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",dns-packet:1.3.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\dns-packet:1.3.1,An abstract-encoding compliant module for encoding / decoding DNS packets,MIT,"","",pkg:npm/dns-packet@1.3.1,cpe:2.3:a:dns-packet_project:dns-packet:1.3.1:*:*:*:*:*:*:*,1067881,"",This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",dns-packet:1.3.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\dns-packet:1.3.1,An abstract-encoding compliant module for encoding / decoding DNS packets,MIT,"","",pkg:npm/dns-packet@1.3.1,cpe:2.3:a:dns-packet_project:dns-packet:1.3.1:*:*:*:*:*:*:*,CVE-2021-23386,CWE-200 Information Exposure,This affects the package dns-packet before 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.,NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:P/I:N/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",elliptic:6.5.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\elliptic:6.5.2,EC cryptography,MIT,"","",pkg:npm/elliptic@6.5.2,cpe:2.3:a:elliptic_project:elliptic:6.5.2:*:*:*:*:*:*:*,CVE-2020-13822,CWE-190 Integer Overflow or Wraparound,"The Elliptic package 6.5.2 for Node.js allows ECDSA signature malleability via variations in encoding, leading '\0' bytes, or integer overflows. This could conceivably have a security-relevant impact if an application relied on a single canonical signature.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.7,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",elliptic:6.5.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\elliptic:6.5.2,EC cryptography,MIT,"","",pkg:npm/elliptic@6.5.2,cpe:2.3:a:elliptic_project:elliptic:6.5.2:*:*:*:*:*:*:*,1069331,"","The Elliptic package before version 6.5.3 for Node.js allows ECDSA signature malleability via variations in encoding, leading '\0' bytes, or integer overflows. This could conceivably have a security-relevant impact if an application relied on a single canonical signature.",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",elliptic:6.5.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\elliptic:6.5.2,EC cryptography,MIT,"","",pkg:npm/elliptic@6.5.2,cpe:2.3:a:elliptic_project:elliptic:6.5.2:*:*:*:*:*:*:*,CVE-2020-28498,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,The package elliptic before 6.5.4 are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,6.8,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",elliptic:6.5.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\elliptic:6.5.2,EC cryptography,MIT,"","",pkg:npm/elliptic@6.5.2,cpe:2.3:a:elliptic_project:elliptic:6.5.2:*:*:*:*:*:*:*,1068218,"",The npm package `elliptic` before version 6.5.4 are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",engine.io:3.2.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\engine.io:3.2.1,The realtime engine behind Socket.IO. Provides the foundation of a bidirectional connection between client and server,MIT,"","",pkg:npm/engine.io@3.2.1,cpe:2.3:a:socket:engine.io:3.2.1:*:*:*:*:*:*:*,CVE-2020-36048,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),Engine.IO before 4.0.0 allows attackers to cause a denial of service (resource consumption) via a POST request to the long polling transport.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",engine.io:3.2.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\engine.io:3.2.1,The realtime engine behind Socket.IO. Provides the foundation of a bidirectional connection between client and server,MIT,"","",pkg:npm/engine.io@3.2.1,cpe:2.3:a:socket:engine.io:3.2.1:*:*:*:*:*:*:*,1068118,"",Engine.IO before 4.0.0 allows attackers to cause a denial of service (resource consumption) via a POST request to the long polling transport.,NPM,"","","","","","",HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",eventsource:1.0.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\eventsource:1.0.7,W3C compliant EventSource client for Node.js and browser (polyfill),MIT,"","",pkg:npm/eventsource@1.0.7,cpe:2.3:a:eventsource:eventsource:1.0.7:*:*:*:*:*:*:*,CVE-2022-1650,CWE-200 Information Exposure,Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository eventsource/eventsource prior to v2.0.2.,NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,CRITICAL,9.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",eventsource:1.0.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\eventsource:1.0.7,W3C compliant EventSource client for Node.js and browser (polyfill),MIT,"","",pkg:npm/eventsource@1.0.7,cpe:2.3:a:eventsource:eventsource:1.0.7:*:*:*:*:*:*:*,1070403,"","When fetching an url with a link to an external site (Redirect), the users Cookies & Autorisation headers are leaked to the third party application. According to the same-origin-policy, the header should be ""sanitized.""",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",faye-websocket:0.10.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\faye-websocket:0.10.0,Standards-compliant WebSocket server and client,MIT,"","",pkg:npm/faye-websocket@0.10.0,cpe:2.3:a:faye-websocket_project:faye-websocket:0.10.0:*:*:*:*:*:*:*,CVE-2020-15133,CWE-295 Improper Certificate Validation,"In faye-websocket before version 0.11.0, there is a lack of certification validation in TLS handshakes. The `Faye::WebSocket::Client` class uses the `EM::Connection#start_tls` method in EventMachine to implement the TLS handshake whenever a `wss:` URL is used for the connection. This method does not implement certificate verification by default, meaning that it does not check that the server presents a valid and trusted TLS certificate for the expected hostname. That means that any `wss:` connection made using this library is vulnerable to a man-in-the-middle attack, since it does not confirm the identity of the server it is connected to. For further background information on this issue, please see the referenced GitHub Advisory. Upgrading `faye-websocket` to v0.11.0 is recommended.",NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,HIGH,8.7,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",follow-redirects:1.11.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\follow-redirects:1.11.0,HTTP and HTTPS modules that follow redirects.,MIT,"","",pkg:npm/follow-redirects@1.11.0,cpe:2.3:a:follow-redirects_project:follow-redirects:1.11.0:*:*:*:*:*:*:*,1067459,"",follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",follow-redirects:1.11.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\follow-redirects:1.11.0,HTTP and HTTPS modules that follow redirects.,MIT,"","",pkg:npm/follow-redirects@1.11.0,cpe:2.3:a:follow-redirects_project:follow-redirects:1.11.0:*:*:*:*:*:*:*,CVE-2022-0155,CWE-359 Exposure of Private Information ('Privacy Violation'),follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",follow-redirects:1.11.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\follow-redirects:1.11.0,HTTP and HTTPS modules that follow redirects.,MIT,"","",pkg:npm/follow-redirects@1.11.0,cpe:2.3:a:follow-redirects_project:follow-redirects:1.11.0:*:*:*:*:*:*:*,CVE-2022-0536,CWE-200 Information Exposure,Exposure of Sensitive Information to an Unauthorized Actor in NPM follow-redirects prior to 1.14.8.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",follow-redirects:1.11.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\follow-redirects:1.11.0,HTTP and HTTPS modules that follow redirects.,MIT,"","",pkg:npm/follow-redirects@1.11.0,cpe:2.3:a:follow-redirects_project:follow-redirects:1.11.0:*:*:*:*:*:*:*,1067407,"",Exposure of Sensitive Information to an Unauthorized Actor in NPM follow-redirects prior to 1.14.8.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",glob-parent:3.1.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\glob-parent:3.1.0,Strips glob magic from a string to provide the parent directory path,ISC,"","",pkg:npm/glob-parent@3.1.0,"",CVE-2020-28469,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.,OSSINDEX,HIGH,7.5,/AV:N/AC:L/Au:/C:N/I:N/A:H,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",glob-parent:3.1.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\glob-parent:3.1.0,Strips glob magic from a string to provide the parent directory path,ISC,"","",pkg:npm/glob-parent@3.1.0,"",1067329,"",This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",glob-parent:5.1.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?chokidar:3.3.1\glob-parent:5.1.0,Extract the non-magic parent path from a glob string.,ISC,"","",pkg:npm/glob-parent@5.1.0,cpe:2.3:a:gulpjs:glob-parent:5.1.0:*:*:*:*:*:*:*,CVE-2020-28469,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",glob-parent:5.1.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?watchpack:1.7.2\glob-parent:5.1.1,Extract the non-magic parent path from a glob string.,ISC,"","",pkg:npm/glob-parent@5.1.1,cpe:2.3:a:gulpjs:glob-parent:5.1.1:*:*:*:*:*:*:*,CVE-2020-28469,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",hosted-git-info:2.8.8,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\hosted-git-info:2.8.8,"Provides metadata and conversions from repository urls for Github, Bitbucket and Gitlab",ISC,"","",pkg:npm/hosted-git-info@2.8.8,"",CVE-2021-23362,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),The package hosted-git-info before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.,OSSINDEX,MEDIUM,5.3,/AV:N/AC:L/Au:/C:N/I:N/A:L,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",hosted-git-info:2.8.8,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\hosted-git-info:2.8.8,"Provides metadata and conversions from repository urls for Github, Bitbucket and Gitlab",ISC,"","",pkg:npm/hosted-git-info@2.8.8,"",1067956,"",The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",hosted-git-info:3.0.4,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?angular-datatables:9.0.2\hosted-git-info:3.0.4,"Provides metadata and conversions from repository urls for Github, Bitbucket and Gitlab",ISC,"","",pkg:npm/hosted-git-info@3.0.4,"",CVE-2021-23362,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),The package hosted-git-info before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.,OSSINDEX,MEDIUM,5.3,/AV:N/AC:L/Au:/C:N/I:N/A:L,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",hosted-git-info:3.0.4,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?angular-datatables:9.0.2\hosted-git-info:3.0.4,"Provides metadata and conversions from repository urls for Github, Bitbucket and Gitlab",ISC,"","",pkg:npm/hosted-git-info@3.0.4,"",1067957,"",The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ini:1.3.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\ini:1.3.5,An ini encoder/decoder for node,ISC,"","",pkg:npm/ini@1.3.5,cpe:2.3:a:ini_project:ini:1.3.5:*:*:*:*:*:*:*,CVE-2020-7788,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,"This affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,HIGH,7.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ini:1.3.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\ini:1.3.5,An ini encoder/decoder for node,ISC,"","",pkg:npm/ini@1.3.5,cpe:2.3:a:ini_project:ini:1.3.5:*:*:*:*:*:*:*,1068298,"","### Overview The `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.  If an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.  ### Patches  This has been patched in 1.3.6  ### Steps to reproduce  payload.ini ``` [__proto__] polluted = ""polluted"" ```  poc.js: ``` var fs = require('fs') var ini = require('ini')  var parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8')) console.log(parsed) console.log(parsed.__proto__) console.log(polluted) ```  ``` > node poc.js {} { polluted: 'polluted' } { polluted: 'polluted' } polluted ```",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.3.2.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\jquery-1.3.2.js,"","",e4af2b4805203f1ac490ad67531b848b,58b83c75c0ce6d70066070cbce6ccfa90a575923,pkg:javascript/jquery@1.3.2,"",CVE-2012-6708,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery before 1.9.0 is vulnerable to Cross-site Scripting (XSS) attacks. The jQuery(strInput) function does not differentiate selectors from HTML in a reliable fashion. In vulnerable versions, jQuery determined whether the input was HTML by looking for the '<' character anywhere in the string, giving attackers more flexibility when attempting to construct a malicious payload. In fixed versions, jQuery only deems the input to be HTML if it explicitly starts with the '<' character, limiting exploitability only to attackers who can control the beginning of a string, which is far less common.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.3.2.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\jquery-1.3.2.js,"","",e4af2b4805203f1ac490ad67531b848b,58b83c75c0ce6d70066070cbce6ccfa90a575923,pkg:javascript/jquery@1.3.2,"",CVE-2019-11358,CWE-1321,"jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.3.2.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\jquery-1.3.2.js,"","",e4af2b4805203f1ac490ad67531b848b,58b83c75c0ce6d70066070cbce6ccfa90a575923,pkg:javascript/jquery@1.3.2,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.3.2.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\jquery-1.3.2.js,"","",e4af2b4805203f1ac490ad67531b848b,58b83c75c0ce6d70066070cbce6ccfa90a575923,pkg:javascript/jquery@1.3.2,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.3.2.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\jquery-1.3.2.js,"","",e4af2b4805203f1ac490ad67531b848b,58b83c75c0ce6d70066070cbce6ccfa90a575923,pkg:javascript/jquery@1.3.2,"",CVE-2011-4969,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"Cross-site scripting (XSS) vulnerability in jQuery before 1.6.3, when using location.hash to select elements, allows remote attackers to inject arbitrary web script or HTML via a crafted tag.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,"","","",HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.4.4.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-1.4.4.min.js,"","",73a9c334c5ca71d70d092b42064f6476,b75990598ee8d3895448ed9d08726af63109f842,pkg:javascript/jquery@1.4.4.min,"",CVE-2012-6708,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery before 1.9.0 is vulnerable to Cross-site Scripting (XSS) attacks. The jQuery(strInput) function does not differentiate selectors from HTML in a reliable fashion. In vulnerable versions, jQuery determined whether the input was HTML by looking for the '<' character anywhere in the string, giving attackers more flexibility when attempting to construct a malicious payload. In fixed versions, jQuery only deems the input to be HTML if it explicitly starts with the '<' character, limiting exploitability only to attackers who can control the beginning of a string, which is far less common.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.4.4.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-1.4.4.min.js,"","",73a9c334c5ca71d70d092b42064f6476,b75990598ee8d3895448ed9d08726af63109f842,pkg:javascript/jquery@1.4.4.min,"",CVE-2015-9251,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text/javascript responses to be executed.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.4.4.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-1.4.4.min.js,"","",73a9c334c5ca71d70d092b42064f6476,b75990598ee8d3895448ed9d08726af63109f842,pkg:javascript/jquery@1.4.4.min,"",CVE-2019-11358,CWE-1321,"jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.4.4.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-1.4.4.min.js,"","",73a9c334c5ca71d70d092b42064f6476,b75990598ee8d3895448ed9d08726af63109f842,pkg:javascript/jquery@1.4.4.min,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.4.4.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-1.4.4.min.js,"","",73a9c334c5ca71d70d092b42064f6476,b75990598ee8d3895448ed9d08726af63109f842,pkg:javascript/jquery@1.4.4.min,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-1.4.4.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-1.4.4.min.js,"","",73a9c334c5ca71d70d092b42064f6476,b75990598ee8d3895448ed9d08726af63109f842,pkg:javascript/jquery@1.4.4.min,"",CVE-2011-4969,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"Cross-site scripting (XSS) vulnerability in jQuery before 1.6.3, when using location.hash to select elements, allows remote attackers to inject arbitrary web script or HTML via a crafted tag.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,"","","",HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-ui-1.8.10.custom.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-ui-1.8.10.custom.min.js,"","",a1b0ab465f53fbcfd5c331ae58e0564c,5e4fe114e79ac4fb0cba97fc5e39dd8e9ce7ef07,"pkg:javascript/jquery-ui-dialog@1.8.10, pkg:javascript/jquery-ui@1.8.10","",CVE-2016-7103,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),Cross-site scripting (XSS) vulnerability in jQuery UI before 1.12.0 might allow remote attackers to inject arbitrary web script or HTML via the closeText parameter of the dialog function.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,"HIGHEST, HIGHEST",5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-ui-1.8.10.custom.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-ui-1.8.10.custom.min.js,"","",a1b0ab465f53fbcfd5c331ae58e0564c,5e4fe114e79ac4fb0cba97fc5e39dd8e9ce7ef07,"pkg:javascript/jquery-ui-dialog@1.8.10, pkg:javascript/jquery-ui@1.8.10","",CVE-2021-41182,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery-UI is the official jQuery user interface library. Prior to version 1.13.0, accepting the value of the `altField` option of the Datepicker widget from untrusted sources may execute untrusted code. The issue is fixed in jQuery UI 1.13.0. Any string value passed to the `altField` option is now treated as a CSS selector. A workaround is to not accept the value of the `altField` option from untrusted sources.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,"HIGHEST, HIGHEST",5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-ui-1.8.10.custom.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-ui-1.8.10.custom.min.js,"","",a1b0ab465f53fbcfd5c331ae58e0564c,5e4fe114e79ac4fb0cba97fc5e39dd8e9ce7ef07,"pkg:javascript/jquery-ui-dialog@1.8.10, pkg:javascript/jquery-ui@1.8.10","",CVE-2021-41183,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery-UI is the official jQuery user interface library. Prior to version 1.13.0, accepting the value of various `*Text` options of the Datepicker widget from untrusted sources may execute untrusted code. The issue is fixed in jQuery UI 1.13.0. The values passed to various `*Text` options are now always treated as pure text, not HTML. A workaround is to not accept the value of the `*Text` options from untrusted sources.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,"HIGHEST, HIGHEST",5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-ui-1.8.10.custom.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-ui-1.8.10.custom.min.js,"","",a1b0ab465f53fbcfd5c331ae58e0564c,5e4fe114e79ac4fb0cba97fc5e39dd8e9ce7ef07,"pkg:javascript/jquery-ui-dialog@1.8.10, pkg:javascript/jquery-ui@1.8.10","",CVE-2021-41184,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery-UI is the official jQuery user interface library. Prior to version 1.13.0, accepting the value of the `of` option of the `.position()` util from untrusted sources may execute untrusted code. The issue is fixed in jQuery UI 1.13.0. Any string value passed to the `of` option is now treated as a CSS selector. A workaround is to not accept the value of the `of` option from untrusted sources.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,"HIGHEST, HIGHEST",5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery-ui-1.8.10.custom.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\selenium-webdriver\lib\test\data\js\jquery-ui-1.8.10.custom.min.js,"","",a1b0ab465f53fbcfd5c331ae58e0564c,5e4fe114e79ac4fb0cba97fc5e39dd8e9ce7ef07,"pkg:javascript/jquery-ui-dialog@1.8.10, pkg:javascript/jquery-ui@1.8.10","",CVE-2010-5312,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),Cross-site scripting (XSS) vulnerability in jquery.ui.dialog.js in the Dialog widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title option.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,"","","","HIGHEST, HIGHEST",5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.js,"","",b0e8755b0ab71a0a4aea47c3b589b47e,849189b1a2f520293ffc649ee14fbddc32f44fdb,pkg:javascript/jquery@3.3.1,"",CVE-2019-11358,CWE-1321,"jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.js,"","",b0e8755b0ab71a0a4aea47c3b589b47e,849189b1a2f520293ffc649ee14fbddc32f44fdb,pkg:javascript/jquery@3.3.1,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.js,"","",b0e8755b0ab71a0a4aea47c3b589b47e,849189b1a2f520293ffc649ee14fbddc32f44fdb,pkg:javascript/jquery@3.3.1,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.min.js,"","",a6b6350ee94a3ea74595c065cbf58af0,b15f7cfa79519756dff1ad22553fd0ed09024343,pkg:javascript/jquery@3.4.1,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.min.js,"","",a6b6350ee94a3ea74595c065cbf58af0,b15f7cfa79519756dff1ad22553fd0ed09024343,pkg:javascript/jquery@3.4.1,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.slim.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.slim.js,"","",b66f82bff95817faddf776d5cfacd5c5,a0588aecc9e4b0dcd0eed0e19ab1f114b93c5963,pkg:javascript/jquery@3.4.1,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.slim.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.slim.js,"","",b66f82bff95817faddf776d5cfacd5c5,a0588aecc9e4b0dcd0eed0e19ab1f114b93c5963,pkg:javascript/jquery@3.4.1,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.slim.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.slim.min.js,"","",50dc009b65de5def1626271a5117f970,1097a9cf5fa61db231ec60ce95f6c60dd71ec4e9,pkg:javascript/jquery@3.4.1,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jquery.slim.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\dist\assets\js\jquery.slim.min.js,"","",50dc009b65de5def1626271a5117f970,1097a9cf5fa61db231ec60ce95f6c60dd71ec4e9,pkg:javascript/jquery@3.4.1,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",json-schema:0.2.3,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\json-schema:0.2.3,JSON Schema validation and specifications,"","","",pkg:npm/json-schema@0.2.3,cpe:2.3:a:json-schema_project:json-schema:0.2.3:*:*:*:*:*:*:*,CVE-2021-3918,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'),NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",json-schema:0.2.3,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\json-schema:0.2.3,JSON Schema validation and specifications,"","","",pkg:npm/json-schema@0.2.3,cpe:2.3:a:json-schema_project:json-schema:0.2.3:*:*:*:*:*:*:*,1070413,"",json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'),NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jszip.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\jszip\dist\jszip.js,"","",f7ef2f429f015b7af587df2385218da4,28468d3346c7fa88344544035fa12df868133cee,pkg:javascript/jszip@3.3.0,"",CVE-2021-23413,NVD-CWE-noinfo,"This affects the package jszip before 3.7.0. Crafting a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc) results in a returned object with a modified prototype instance.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jszip.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\jszip\dist\jszip.min.js,"","",7e1d909c8012b7968a01a15266689984,30a261cb636edf5cdfd494e48b54861df75440cb,pkg:javascript/jszip@3.3.0,"",CVE-2021-23413,NVD-CWE-noinfo,"This affects the package jszip before 3.7.0. Crafting a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc) results in a returned object with a modified prototype instance.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jszip:3.4.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\jszip:3.4.0,"Create, read and edit .zip files with JavaScript http://stuartk.com/jszip",(MIT OR GPL-3.0),"","",pkg:npm/jszip@3.4.0,cpe:2.3:a:jszip_project:jszip:3.4.0:*:*:*:*:*:*:*,CVE-2021-23413,NVD-CWE-noinfo,"This affects the package jszip before 3.7.0. Crafting a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc) results in a returned object with a modified prototype instance.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",jszip:3.4.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\jszip:3.4.0,"Create, read and edit .zip files with JavaScript http://stuartk.com/jszip",(MIT OR GPL-3.0),"","",pkg:npm/jszip@3.4.0,cpe:2.3:a:jszip_project:jszip:3.4.0:*:*:*:*:*:*:*,1067773,"","This affects the package jszip before 3.7.0. Crafting a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc) results in a returned object with a modified prototype instance.",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",karma:4.4.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\karma:4.4.1,Spectacular Test Runner for JavaScript.,MIT,"","",pkg:npm/karma@4.4.1,cpe:2.3:a:karma_project:karma:4.4.1:*:*:*:*:*:*:*,CVE-2021-23495,CWE-601 URL Redirection to Untrusted Site ('Open Redirect'),The package karma before 6.3.16 are vulnerable to Open Redirect due to missing validation of the return_url query parameter.,NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",karma:4.4.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\karma:4.4.1,Spectacular Test Runner for JavaScript.,MIT,"","",pkg:npm/karma@4.4.1,cpe:2.3:a:karma_project:karma:4.4.1:*:*:*:*:*:*:*,CVE-2022-0437,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),Cross-site Scripting (XSS) - DOM in NPM karma prior to 6.3.14.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",karma:4.4.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\karma:4.4.1,Spectacular Test Runner for JavaScript.,MIT,"","",pkg:npm/karma@4.4.1,cpe:2.3:a:karma_project:karma:4.4.1:*:*:*:*:*:*:*,1067394,"",Karma before 6.3.16 is vulnerable to Open Redirect due to missing validation of the return_url query parameter.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",karma:4.4.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\karma:4.4.1,Spectacular Test Runner for JavaScript.,MIT,"","",pkg:npm/karma@4.4.1,cpe:2.3:a:karma_project:karma:4.4.1:*:*:*:*:*:*:*,1067422,"",karma prior to version 6.3.14 contains a cross-site scripting vulnerability.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",live.bundle.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\@angular-devkit\build-angular\node_modules\webpack-dev-server\client\live.bundle.js,"","",77c26d2b3e7222e61c013556e0c79ea2,d187f10edec15779bf2e14bb133d5f35837bc394,pkg:javascript/jquery@3.4.1,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",live.bundle.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\@angular-devkit\build-angular\node_modules\webpack-dev-server\client\live.bundle.js,"","",77c26d2b3e7222e61c013556e0c79ea2,d187f10edec15779bf2e14bb133d5f35837bc394,pkg:javascript/jquery@3.4.1,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",lodash:4.17.15,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\lodash:4.17.15,Lodash modular utilities.,MIT,"","",pkg:npm/lodash@4.17.15,cpe:2.3:a:lodash:lodash:4.17.15:*:*:*:*:*:*:*,CVE-2020-8203,CWE-1321,Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:N/I:P/A:P,HIGH,7.4,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",lodash:4.17.15,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\lodash:4.17.15,Lodash modular utilities.,MIT,"","",pkg:npm/lodash@4.17.15,cpe:2.3:a:lodash:lodash:4.17.15:*:*:*:*:*:*:*,CVE-2021-23337,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,NVD,MEDIUM,6.5,/AV:N/AC:L/Au:S/C:P/I:P/A:P,HIGH,7.2,CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",lodash:4.17.15,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\lodash:4.17.15,Lodash modular utilities.,MIT,"","",pkg:npm/lodash@4.17.15,cpe:2.3:a:lodash:lodash:4.17.15:*:*:*:*:*:*:*,1070117,"",`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,NPM,"","","","","","",HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",lodash:4.17.15,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\lodash:4.17.15,Lodash modular utilities.,MIT,"","",pkg:npm/lodash@4.17.15,cpe:2.3:a:lodash:lodash:4.17.15:*:*:*:*:*:*:*,1070247,"",Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.  This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.,NPM,"","","","","","",HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",lodash:4.17.15,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\lodash:4.17.15,Lodash modular utilities.,MIT,"","",pkg:npm/lodash@4.17.15,cpe:2.3:a:lodash:lodash:4.17.15:*:*:*:*:*:*:*,CVE-2020-28500,NVD-CWE-Other,"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",lodash:4.17.15,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\lodash:4.17.15,Lodash modular utilities.,MIT,"","",pkg:npm/lodash@4.17.15,cpe:2.3:a:lodash:lodash:4.17.15:*:*:*:*:*:*:*,1070122,"","All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = ""1"" for (var i = 0; i < n; i++) { ret += "" "" } return ret + ""1""; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(""time_cost0: "" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(""time_cost1: "" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(""time_cost2: "" + time_cost2)",NPM,"","","","","","",HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",log4js:4.5.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\log4js:4.5.1,Port of Log4js to work with node.,Apache-2.0,"","",pkg:npm/log4js@4.5.1,cpe:2.3:a:log4js_project:log4js:4.5.1:*:*:*:*:*:*:*,CVE-2022-21704,CWE-276 Incorrect Default Permissions,"log4js-node is a port of log4js to node.js. In affected versions default file permissions for log files created by the file, fileSync and dateFile appenders are world-readable (in unix). This could cause problems if log files contain sensitive information. This would affect any users that have not supplied their own permissions for the files via the mode parameter in the config. Users are advised to update.",NVD,LOW,2.1,/AV:L/AC:L/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",log4js:4.5.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\log4js:4.5.1,Port of Log4js to work with node.,Apache-2.0,"","",pkg:npm/log4js@4.5.1,cpe:2.3:a:log4js_project:log4js:4.5.1:*:*:*:*:*:*:*,1070024,"","### Impact Default file permissions for log files created by the file, fileSync and dateFile appenders are world-readable (in unix). This could cause problems if log files contain sensitive information. This would affect any users that have not supplied their own permissions for the files via the mode parameter in the config.  ### Patches Fixed by: * https://github.com/log4js-node/log4js-node/pull/1141 * https://github.com/log4js-node/streamroller/pull/87  Released to NPM in log4js@6.4.0  ### Workarounds Every version of log4js published allows passing the mode parameter to the configuration of file appenders, see the documentation for details.  ### References  Thanks to [ranjit-git](https://www.huntr.dev/users/ranjit-git) for raising the issue, and to @peteriman for fixing the problem.  ### For more information If you have any questions or comments about this advisory: * Open an issue in [logj4s-node](https://github.com/log4js-node/log4js-node) * Ask a question in the [slack channel](https://join.slack.com/t/log4js-node/shared_invite/enQtODkzMDQ3MzExMDczLWUzZmY0MmI0YWI1ZjFhODY0YjI0YmU1N2U5ZTRkOTYyYzg3MjY5NWI4M2FjZThjYjdiOGM0NjU2NzBmYTJjOGI) * Email us at [gareth.nomiddlename@gmail.com](mailto:gareth.nomiddlename@gmail.com)",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",minimist:0.0.10,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?optimist:0.6.1\minimist:0.0.10,parse argument options,MIT,"","",pkg:npm/minimist@0.0.10,cpe:2.3:a:substack:minimist:0.0.10:*:*:*:*:*:*:*,CVE-2021-44906,CWE-1321,"Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",minimist:0.0.10,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?optimist:0.6.1\minimist:0.0.10,parse argument options,MIT,"","",pkg:npm/minimist@0.0.10,cpe:2.3:a:substack:minimist:0.0.10:*:*:*:*:*:*:*,CVE-2020-7598,CWE-1321,"minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a ""constructor"" or ""__proto__"" payload.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,MEDIUM,5.6,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L,HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",minimist:0.0.10,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?optimist:0.6.1\minimist:0.0.10,parse argument options,MIT,"","",pkg:npm/minimist@0.0.10,cpe:2.3:a:substack:minimist:0.0.10:*:*:*:*:*:*:*,1070255,"","Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.   Parsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.   This is exploitable if attackers have control over the arguments being passed to `minimist`.    ## Recommendation  Upgrade to versions 0.2.1, 1.2.3 or later.",NPM,"","","","","","",HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",minimist:1.2.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\minimist:1.2.5,parse argument options,MIT,"","",pkg:npm/minimist@1.2.5,cpe:2.3:a:substack:minimist:1.2.5:*:*:*:*:*:*:*,CVE-2021-44906,CWE-1321,"Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",minimist:1.2.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\minimist:1.2.5,parse argument options,MIT,"","",pkg:npm/minimist@1.2.5,cpe:2.3:a:substack:minimist:1.2.5:*:*:*:*:*:*:*,1067342,"","Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",NPM,"","","","","","",HIGHEST,9
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment-with-locales.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\min\moment-with-locales.js,"","",084396f4103c2797a8dd4178abaec6c9,b408c935e497f74dfc88924e0b35a78b2a555539,pkg:javascript/moment.js@2.18.1,"",CVE-2017-18214,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment-with-locales.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\min\moment-with-locales.js,"","",084396f4103c2797a8dd4178abaec6c9,b408c935e497f74dfc88924e0b35a78b2a555539,pkg:javascript/moment.js@2.18.1,"",CVE-2022-24785,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment-with-locales.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\min\moment-with-locales.min.js,"","",777d149dd9d99380f238699e68ecbdf4,b063846a7c321d3b1b96224d9b6c7318ff587aa6,pkg:javascript/moment.js@2.18.1,"",CVE-2017-18214,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment-with-locales.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\min\moment-with-locales.min.js,"","",777d149dd9d99380f238699e68ecbdf4,b063846a7c321d3b1b96224d9b6c7318ff587aa6,pkg:javascript/moment.js@2.18.1,"",CVE-2022-24785,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\moment.js,"","",d8a123e9f7c06ef8c0d4a9a9e8ac8cd5,71a0f6e03a34656d5a8a9f764e5c8b70cc5934ae,pkg:javascript/moment.js@2.18.1,"",CVE-2017-18214,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\moment.js,"","",d8a123e9f7c06ef8c0d4a9a9e8ac8cd5,71a0f6e03a34656d5a8a9f764e5c8b70cc5934ae,pkg:javascript/moment.js@2.18.1,"",CVE-2022-24785,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\src\moment.js,"","",76bee7d583d983f5bc5cb141e3daf7a1,f5b1584e202354b7e4ed6f91c11baeb113c56576,pkg:javascript/moment.js@2.18.1,"",CVE-2017-18214,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\src\moment.js,"","",76bee7d583d983f5bc5cb141e3daf7a1,f5b1584e202354b7e4ed6f91c11baeb113c56576,pkg:javascript/moment.js@2.18.1,"",CVE-2022-24785,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\min\moment.min.js,"","",aeb7908241d9f6d5a45e504cc4f2ec15,32fdf6730be34538e09378ec6cc55229d9a70151,pkg:javascript/moment.js@2.18.1,"",CVE-2017-18214,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment.min.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\moment\min\moment.min.js,"","",aeb7908241d9f6d5a45e504cc4f2ec15,32fdf6730be34538e09378ec6cc55229d9a70151,pkg:javascript/moment.js@2.18.1,"",CVE-2022-24785,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment:2.18.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\moment:2.18.1,"Parse, validate, manipulate, and display dates",MIT,"","",pkg:npm/moment@2.18.1,"cpe:2.3:a:moment_project:moment:2.18.1:*:*:*:*:*:*:*, cpe:2.3:a:momentjs:moment:2.18.1:*:*:*:*:*:*:*",CVE-2017-18214,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment:2.18.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\moment:2.18.1,"Parse, validate, manipulate, and display dates",MIT,"","",pkg:npm/moment@2.18.1,"cpe:2.3:a:moment_project:moment:2.18.1:*:*:*:*:*:*:*, cpe:2.3:a:momentjs:moment:2.18.1:*:*:*:*:*:*:*",CVE-2022-24785,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment:2.18.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\moment:2.18.1,"Parse, validate, manipulate, and display dates",MIT,"","",pkg:npm/moment@2.18.1,"cpe:2.3:a:moment_project:moment:2.18.1:*:*:*:*:*:*:*, cpe:2.3:a:momentjs:moment:2.18.1:*:*:*:*:*:*:*",1069917,"",Affected versions of `moment` are vulnerable to a low severity regular expression denial of service when parsing dates as strings.   ## Recommendation  Update to version 2.19.3 or later.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",moment:2.18.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\moment:2.18.1,"Parse, validate, manipulate, and display dates",MIT,"","",pkg:npm/moment@2.18.1,"cpe:2.3:a:moment_project:moment:2.18.1:*:*:*:*:*:*:*, cpe:2.3:a:momentjs:moment:2.18.1:*:*:*:*:*:*:*",1070245,"","### Impact This vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.  ### Patches This problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).  ### Workarounds Sanitize user-provided locale name before passing it to moment.js.  ### References _Are there any links users can visit to find out more?_  ### For more information If you have any questions or comments about this advisory: * Open an issue in [moment repo](https://github.com/moment/moment)",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ngx-bootstrap.umd.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\ng-bootstrap\bundles\ngx-bootstrap.umd.js,"","",ab20d62c66d1949f164467f82fb98b2c,8612419b47ea95fe5db4865a80f92a4daab5970a,pkg:javascript/moment.js@2.18.1,"",CVE-2017-18214,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ngx-bootstrap.umd.js,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\node_modules\ng-bootstrap\bundles\ngx-bootstrap.umd.js,"","",ab20d62c66d1949f164467f82fb98b2c,8612419b47ea95fe5db4865a80f92a4daab5970a,pkg:javascript/moment.js@2.18.1,"",CVE-2022-24785,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGHEST,3
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",CVE-2022-24771,CWE-347 Improper Verification of Cryptographic Signature,"Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",OSSINDEX,HIGH,7.5,/AV:N/AC:L/Au:/C:N/I:H/A:N,"","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",CVE-2022-24772,CWE-347 Improper Verification of Cryptographic Signature,"Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",OSSINDEX,HIGH,7.5,/AV:N/AC:L/Au:/C:N/I:H/A:N,"","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",CVE-2020-7720,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,The package node-forge before 0.10.0 is vulnerable to Prototype Pollution via the util.setPath function. Note: Version 0.10.0 is a breaking change removing the vulnerable functions.,OSSINDEX,HIGH,7.3,/AV:N/AC:L/Au:/C:L/I:L/A:L,"","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",1068341,"",The package node-forge before 0.10.0 is vulnerable to Prototype Pollution via the util.setPath function. Note: Version 0.10.0 is a breaking change removing the vulnerable functions.,NPM,"","","","","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",1070355,"","### Impact  RSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used.  ### Patches  The issue has been addressed in `node-forge` `1.3.0`.  ### References  For more information, please see [""Bleichenbacher's RSA signature forgery based on implementation error""](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/) by Hal Finney.  ### For more information  If you have any questions or comments about this advisory: * Open an issue in [forge](https://github.com/digitalbazaar/forge) * Email us at [example email address](mailto:security@digitalbazaar.com)",NPM,"","","","","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",1070356,"","### Impact  RSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used.  ### Patches  The issue has been addressed in `node-forge` `1.3.0`.  ### References  For more information, please see [""Bleichenbacher's RSA signature forgery based on implementation error""](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/) by Hal Finney.  ### For more information  If you have any questions or comments about this advisory: * Open an issue in [forge](https://github.com/digitalbazaar/forge) * Email us at [example email address](mailto:security@digitalbazaar.com)",NPM,"","","","","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",CVE-2022-0122,CWE-601 URL Redirection to Untrusted Site ('Open Redirect'),forge is vulnerable to URL Redirection to Untrusted Site,OSSINDEX,MEDIUM,6.1,/AV:N/AC:L/Au:/C:L/I:L/A:N,"","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",CVE-2022-24773,CWE-347 Improper Verification of Cryptographic Signature,"Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not properly check `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",OSSINDEX,MEDIUM,5.3,/AV:N/AC:L/Au:/C:N/I:L/A:N,"","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",1067452,"",parseUrl functionality in node-forge mishandles certain uses of backslash such as https:/\/\/\ and interprets the URI as a relative path.,NPM,"","","","","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",1070354,"",### Impact  RSA PKCS#1 v1.5 signature verification code is not properly checking `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest.  ### Patches  The issue has been addressed in `node-forge` `1.3.0`.  ### For more information  If you have any questions or comments about this advisory: * Open an issue in [forge](https://github.com/digitalbazaar/forge) * Email us at [example email address](mailto:security@digitalbazaar.com),NPM,"","","","","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",1067471,"","### Impact The `forge.debug` API had a potential prototype pollution issue if called with untrusted input. The API was only used for internal debug purposes in a safe way and never documented or advertised.  It is suspected that uses of this API, if any exist, would likely not have used untrusted inputs in a vulnerable way.  ### Patches The `forge.debug` API and related functions were removed in 1.0.0.  ### Workarounds Don't use the `forge.debug` API directly or indirectly with untrusted input.  ### References - https://www.huntr.dev/bounties/1-npm-node-forge/  ### For more information If you have any questions or comments about this advisory: * Open an issue in [forge](https://github.com/digitalbazaar/forge). * Email us at support@digitalbazaar.com.",NPM,"","","","","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",1067472,"",### Impact `forge.util.setPath` had a potential prototype pollution issue if called with untrusted keys. This API was not used by forge itself.  ### Patches The `forge.util.setPath` API and related functions were removed in 0.10.0.  ### Workarounds Don't call `forge.util.setPath` directly or indirectly with untrusted keys.  ### References - https://security.snyk.io/vuln/SNYK-JS-NODEFORGE-598677 - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7720  ### For more information If you have any questions or comments about this advisory: * Open an issue in [forge](https://github.com/digitalbazaar/forge). * Email us at support@digitalbazaar.com.,NPM,"","","","","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",node-forge:0.9.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\node-forge:0.9.0,"JavaScript implementations of network transports, cryptography, ciphers, PKI, message digests, and various utilities.",(BSD-3-Clause OR GPL-2.0),"","",pkg:npm/node-forge@0.9.0,"",1067473,"",### Impact The regex used for the `forge.util.parseUrl` API would not properly parse certain inputs resulting in a parsed data structure that could lead to undesired behavior.  ### Patches `forge.util.parseUrl` and other very old related URL APIs were removed in 1.0.0 in favor of letting applications use the more modern WHATWG URL Standard API.  ### Workarounds Ensure code does not directly or indirectly call `forge.util.parseUrl` with untrusted input.  ### References - https://www.huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae/  ### For more information If you have any questions or comments about this advisory: * Open an issue in [forge](https://github.com/digitalbazaar/forge) * Email us at support@digitalbazaar.com,NPM,"","","","","","",HIGHEST,11
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",npm-registry-fetch:3.9.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\npm-registry-fetch:3.9.1,Fetch-based http client for use with npm registry APIs,ISC,"","",pkg:npm/npm-registry-fetch@3.9.1,"",1069347,"",Affected versions of `npm-registry-fetch` are vulnerable to an information exposure vulnerability through log files. The cli supports URLs like `<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",nth-check:1.0.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\nth-check:1.0.2,performant nth-check parser & compiler,BSD-2-Clause,"","",pkg:npm/nth-check@1.0.2,cpe:2.3:a:nth-check_project:nth-check:1.0.2:*:*:*:*:*:*:*,CVE-2021-3803,NVD-CWE-Other,nth-check is vulnerable to Inefficient Regular Expression Complexity,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",nth-check:1.0.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\nth-check:1.0.2,performant nth-check parser & compiler,BSD-2-Clause,"","",pkg:npm/nth-check@1.0.2,cpe:2.3:a:nth-check_project:nth-check:1.0.2:*:*:*:*:*:*:*,1070415,"",nth-check is vulnerable to Inefficient Regular Expression Complexity,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",pacote:9.5.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\pacote:9.5.0,JavaScript package downloader,MIT,"","",pkg:npm/pacote@9.5.0,"",CVE-2019-16776,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user's system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.,OSSINDEX,HIGH,8.1,/AV:N/AC:L/Au:/C:H/I:H/A:N,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",pacote:9.5.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\pacote:9.5.0,JavaScript package downloader,MIT,"","",pkg:npm/pacote@9.5.0,"",CVE-2019-16775,CWE-61 UNIX Symbolic Link (Symlink) Following,Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user's system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.,OSSINDEX,MEDIUM,6.5,/AV:N/AC:L/Au:/C:N/I:H/A:N,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",path-parse:1.0.6,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\path-parse:1.0.6,Node.js path.parse() ponyfill,MIT,"","",pkg:npm/path-parse@1.0.6,cpe:2.3:a:path-parse_project:path-parse:1.0.6:*:*:*:*:*:*:*,CVE-2021-23343,NVD-CWE-noinfo,"All versions of package path-parse are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",path-parse:1.0.6,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\path-parse:1.0.6,Node.js path.parse() ponyfill,MIT,"","",pkg:npm/path-parse@1.0.6,cpe:2.3:a:path-parse_project:path-parse:1.0.6:*:*:*:*:*:*:*,1067761,"","Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",postcss:7.0.17,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\postcss:7.0.17,Tool for transforming styles with JS plugins,MIT,"","",pkg:npm/postcss@7.0.17,cpe:2.3:a:postcss:postcss:7.0.17:*:*:*:*:*:*:*,CVE-2021-23368,NVD-CWE-noinfo,The package postcss from 7.0.0 and before 8.2.10 are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",postcss:7.0.17,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\postcss:7.0.17,Tool for transforming styles with JS plugins,MIT,"","",pkg:npm/postcss@7.0.17,cpe:2.3:a:postcss:postcss:7.0.17:*:*:*:*:*:*:*,CVE-2021-23382,NVD-CWE-Other,The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \/\*\s* sourceMappingURL=(.*).,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",postcss:7.0.32,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?css-loader:3.6.0\postcss:7.0.32,Tool for transforming styles with JS plugins,MIT,"","",pkg:npm/postcss@7.0.32,cpe:2.3:a:postcss:postcss:7.0.32:*:*:*:*:*:*:*,CVE-2021-23368,NVD-CWE-noinfo,The package postcss from 7.0.0 and before 8.2.10 are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",postcss:7.0.32,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?css-loader:3.6.0\postcss:7.0.32,Tool for transforming styles with JS plugins,MIT,"","",pkg:npm/postcss@7.0.32,cpe:2.3:a:postcss:postcss:7.0.32:*:*:*:*:*:*:*,CVE-2021-23382,NVD-CWE-Other,The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \/\*\s* sourceMappingURL=(.*).,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",postcss:7.0.32,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?css-loader:3.6.0\postcss:7.0.32,Tool for transforming styles with JS plugins,MIT,"","",pkg:npm/postcss@7.0.32,cpe:2.3:a:postcss:postcss:7.0.32:*:*:*:*:*:*:*,1067832,"",The npm package `postcss` from 7.0.0 and before versions 7.0.36 and 8.2.10 is vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.,NPM,"","","","","","",HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",postcss:7.0.32,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?css-loader:3.6.0\postcss:7.0.32,Tool for transforming styles with JS plugins,MIT,"","",pkg:npm/postcss@7.0.32,cpe:2.3:a:postcss:postcss:7.0.32:*:*:*:*:*:*:*,1070012,"",The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \/\*\s* sourceMappingURL=(.*).,NPM,"","","","","","",HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",serialize-javascript:2.1.2,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\serialize-javascript:2.1.2,Serialize JavaScript to a superset of JSON that includes regular expressions and functions.,BSD-3-Clause,"","",pkg:npm/serialize-javascript@2.1.2,"",1069320,"","serialize-javascript prior to 3.1.0 allows remote attackers to inject arbitrary code via the function ""deleteFunctions"" within ""index.js"".   An object such as `{""foo"": /1""/, ""bar"": ""a\""@__R-<UID>-0__@""}` was serialized as `{""foo"": /1""/, ""bar"": ""a\/1""/}`, which allows an attacker to escape the `bar` key. This requires the attacker to control the values of both `foo` and `bar` and guess the value of `<UID>`. The UID has a keyspace of approximately 4 billion making it a realistic network attack.",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",set-value:2.0.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\set-value:2.0.1,Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.,MIT,"","",pkg:npm/set-value@2.0.1,cpe:2.3:a:set-value_project:set-value:2.0.1:*:*:*:*:*:*:*,CVE-2021-23440,CWE-843 Access of Resource Using Incompatible Type ('Type Confusion'),"This affects the package set-value before <2.0.1, >=3.0.0 <4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",OSSINDEX,HIGH,9.8,/AV:N/AC:L/Au:/C:H/I:H/A:H,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",shelljs:0.8.3,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\shelljs:0.8.3,Portable Unix shell commands for Node.js,BSD-3-Clause,"","",pkg:npm/shelljs@0.8.3,cpe:2.3:a:shelljs_project:shelljs:0.8.3:*:*:*:*:*:*:*,CVE-2022-0144,CWE-269 Improper Privilege Management,shelljs is vulnerable to Improper Privilege Management,NVD,LOW,3.6,/AV:L/AC:L/Au:N/C:P/I:N/A:P,HIGH,7.1,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",shelljs:0.8.3,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\shelljs:0.8.3,Portable Unix shell commands for Node.js,BSD-3-Clause,"","",pkg:npm/shelljs@0.8.3,cpe:2.3:a:shelljs_project:shelljs:0.8.3:*:*:*:*:*:*:*,1067444,"",shelljs is vulnerable to Improper Privilege Management,NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",shelljs:0.8.3,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\shelljs:0.8.3,Portable Unix shell commands for Node.js,BSD-3-Clause,"","",pkg:npm/shelljs@0.8.3,cpe:2.3:a:shelljs_project:shelljs:0.8.3:*:*:*:*:*:*:*,1067451,"","### Impact Output from the synchronous version of `shell.exec()` may be visible to other users on the same system. You may be affected if you execute `shell.exec()` in multi-user Mac, Linux, or WSL environments, or if you execute `shell.exec()` as the root user.  Other shelljs functions (including the asynchronous version of `shell.exec()`) are not impacted.  ### Patches Patched in shelljs 0.8.5  ### Workarounds Recommended action is to upgrade to 0.8.5.  ### References https://huntr.dev/bounties/50996581-c08e-4eed-a90e-c0bac082679c/  ### For more information If you have any questions or comments about this advisory: * Ask at https://github.com/shelljs/shelljs/issues/1058 * Open an issue at https://github.com/shelljs/shelljs/issues/new",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",socket.io-parser:3.2.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\socket.io-parser:3.2.0,socket.io protocol parser,MIT,"","",pkg:npm/socket.io-parser@3.2.0,cpe:2.3:a:socket:socket.io-parser:3.2.0:*:*:*:*:*:*:*,CVE-2020-36049,CWE-770 Allocation of Resources Without Limits or Throttling,socket.io-parser before 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",socket.io-parser:3.2.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\socket.io-parser:3.2.0,socket.io protocol parser,MIT,"","",pkg:npm/socket.io-parser@3.2.0,cpe:2.3:a:socket:socket.io-parser:3.2.0:*:*:*:*:*:*:*,1067811,"",The `socket.io-parser` npm package before versions 3.3.2 and 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.,NPM,"","","","","","",HIGHEST,5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",socket.io:2.1.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\socket.io:2.1.1,node.js realtime framework server,MIT,"","",pkg:npm/socket.io@2.1.1,cpe:2.3:a:socket:socket.io:2.1.1:*:*:*:*:*:*:*,CVE-2020-28481,CWE-346 Origin Validation Error,The package socket.io before 2.4.0 are vulnerable to Insecure Defaults due to CORS Misconfiguration. All domains are whitelisted by default.,NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:P/I:N/A:N,MEDIUM,4.3,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N,HIGHEST,5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",socket.io:2.1.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\socket.io:2.1.1,node.js realtime framework server,MIT,"","",pkg:npm/socket.io@2.1.1,cpe:2.3:a:socket:socket.io:2.1.1:*:*:*:*:*:*:*,1068265,"",The package socket.io before 2.4.0 are vulnerable to Insecure Defaults due to CORS Misconfiguration. All domains are whitelisted by default.,NPM,"","","","","","",HIGHEST,5
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",sockjs:0.3.19,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?@angular-devkit\build-angular:0.803.26\sockjs:0.3.19,"SockJS-node is a server counterpart of SockJS-client a JavaScript library that provides a WebSocket-like object in the browser. SockJS gives you a coherent, cross-browser, Javascript API which creates a low latency, full duplex, cross-domain communication channel between the browser and the web server.",MIT,"","",pkg:npm/sockjs@0.3.19,cpe:2.3:a:sockjs_project:sockjs:0.3.19:*:*:*:*:*:*:*,CVE-2020-7693,CWE-20 Improper Input Validation,Incorrect handling of Upgrade header with the value websocket leads in crashing of containers hosting sockjs apps. This affects the package sockjs before 0.3.20.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",sockjs:0.3.19,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?@angular-devkit\build-angular:0.803.26\sockjs:0.3.19,"SockJS-node is a server counterpart of SockJS-client a JavaScript library that provides a WebSocket-like object in the browser. SockJS gives you a coherent, cross-browser, Javascript API which creates a low latency, full duplex, cross-domain communication channel between the browser and the web server.",MIT,"","",pkg:npm/sockjs@0.3.19,cpe:2.3:a:sockjs_project:sockjs:0.3.19:*:*:*:*:*:*:*,1068056,"",Incorrect handling of Upgrade header with the value websocket leads in crashing of containers hosting sockjs apps. This affects the package sockjs before 0.3.20.,NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ssri:6.0.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\ssri:6.0.1,"Standard Subresource Integrity library --  parses, serializes, generates, and verifies integrity metadata according to the SRI spec.",ISC,"","",pkg:npm/ssri@6.0.1,cpe:2.3:a:ssri_project:ssri:6.0.1:*:*:*:*:*:*:*,CVE-2021-27290,NVD-CWE-Other,"ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ssri:6.0.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\ssri:6.0.1,"Standard Subresource Integrity library --  parses, serializes, generates, and verifies integrity metadata according to the SRI spec.",ISC,"","",pkg:npm/ssri@6.0.1,cpe:2.3:a:ssri_project:ssri:6.0.1:*:*:*:*:*:*:*,1068080,"","npm `ssri` 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",streamroller:1.0.6,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\streamroller:1.0.6,"file streams that roll over when size limits, or dates are reached",MIT,"","",pkg:npm/streamroller@1.0.6,"",CVE-2022-21704,CWE-276 Incorrect Default Permissions,"log4js-node is a port of log4js to node.js. In affected versions default file permissions for log files created by the file, fileSync and dateFile appenders are world-readable (in unix). This could cause problems if log files contain sensitive information. This would affect any users that have not supplied their own permissions for the files via the mode parameter in the config. Users are advised to update.",OSSINDEX,MEDIUM,5.5,/AV:L/AC:L/Au:/C:H/I:N/A:N,"","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",tar:4.4.13,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\tar:4.4.13,tar for node,ISC,"","",pkg:npm/tar@4.4.13,cpe:2.3:a:tar_project:tar:4.4.13:*:*:*:*:*:*:*,CVE-2021-37701,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"The npm package ""tar"" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\` and `/` characters as path separators, however `\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.",OSSINDEX,HIGH,8.6,/AV:L/AC:L/Au:/C:H/I:H/A:H,"","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",tar:4.4.13,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\tar:4.4.13,tar for node,ISC,"","",pkg:npm/tar@4.4.13,cpe:2.3:a:tar_project:tar:4.4.13:*:*:*:*:*:*:*,CVE-2021-32803,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"The npm package ""tar"" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:N/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",tar:4.4.13,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\tar:4.4.13,tar for node,ISC,"","",pkg:npm/tar@4.4.13,cpe:2.3:a:tar_project:tar:4.4.13:*:*:*:*:*:*:*,CVE-2021-32804,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"The npm package ""tar"" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:N/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",tar:4.4.13,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\tar:4.4.13,tar for node,ISC,"","",pkg:npm/tar@4.4.13,cpe:2.3:a:tar_project:tar:4.4.13:*:*:*:*:*:*:*,1070363,"","### Impact  Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution  node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.  This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\path`.  If the drive letter does not match the extraction target, for example `D:\extraction\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.  Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.  This only affects users of `node-tar` on Windows systems.  ### Patches  4.4.18 || 5.0.10 || 6.1.9  ### Workarounds  There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.  Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.  ### Fix  The fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not ""absolute"".  Additionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.  Finally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",tar:4.4.13,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\tar:4.4.13,tar for node,ISC,"","",pkg:npm/tar@4.4.13,cpe:2.3:a:tar_project:tar:4.4.13:*:*:*:*:*:*:*,1070366,"","### Impact Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution  node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.  This logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 ""short path"" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.  The v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.  ### Patches  6.1.9 || 5.0.10 || 4.4.18  ### Workarounds  Users may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.  ```js const tar = require('tar')  tar.x({   file: 'archive.tgz',   filter: (file, entry) => {     if (entry.type === 'SymbolicLink') {       return false     } else {       return true     }   } }) ```  Users are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.  #### Fix  The problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:  1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form. 2. All slashes are normalized to `/` on Windows systems (on posix systems, `\` is a valid filename character, and thus left intact). 3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",tar:4.4.13,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\tar:4.4.13,tar for node,ISC,"","",pkg:npm/tar@4.4.13,cpe:2.3:a:tar_project:tar:4.4.13:*:*:*:*:*:*:*,1070369,"","### Impact  Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution  `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.  This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\` and `/` characters as path separators, however `\` is a valid filename character on posix systems.  By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.  Additionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created.   These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.  The v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.  ### Patches  4.4.16 || 5.0.8 || 6.1.7  ### Workarounds  Users may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.  ```js const tar = require('tar')  tar.x({   file: 'archive.tgz',   filter: (file, entry) => {     if (entry.type === 'SymbolicLink') {       return false     } else {       return true     }   } }) ```  Users are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.  ### Fix  The problem is addressed in the following ways:  1. All paths are normalized to use `/` as a path separator, replacing `\` with `/` on Windows systems, and leaving `\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed. 2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.  #### Caveat  Note that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.  Users are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",tar:4.4.13,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\tar:4.4.13,tar for node,ISC,"","",pkg:npm/tar@4.4.13,cpe:2.3:a:tar_project:tar:4.4.13:*:*:*:*:*:*:*,1070372,"","### Impact  Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution  `node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`.   This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite.   ### Patches  3.2.2 || 4.4.14 || 5.0.6 || 6.1.1  NOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.  ### Workarounds  Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.  ```js const path = require('path') const tar = require('tar')  tar.x({   file: 'archive.tgz',   // either add this function...   onentry: (entry) => {     if (path.isAbsolute(entry.path)) {       entry.path = sanitizeAbsolutePathSomehow(entry.path)       entry.absolute = path.resolve(entry.path)     }   },    // or this one   filter: (file, entry) => {     if (path.isAbsolute(entry.path)) {       return false     } else {       return true     }   } }) ```  Users are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",tar:4.4.13,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\tar:4.4.13,tar for node,ISC,"","",pkg:npm/tar@4.4.13,cpe:2.3:a:tar_project:tar:4.4.13:*:*:*:*:*:*:*,1070376,"","### Impact  Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution  `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.  This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.  By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.  This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.  ### Patches  3.2.3 || 4.4.15 || 5.0.7 || 6.1.2  ### Workarounds  Users may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.  ```js const tar = require('tar')  tar.x({   file: 'archive.tgz',   filter: (file, entry) => {     if (entry.type === 'SymbolicLink') {       return false     } else {       return true     }   } }) ```  Users are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",typescript:3.4.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\typescript:3.4.5,TypeScript is a language for application scale JavaScript development,Apache-2.0,"","",pkg:npm/typescript@3.4.5,"",CVE-2021-1639,CWE-20 Improper Input Validation,Visual Studio Code Remote Code Execution Vulnerability,OSSINDEX,HIGH,7.8,/AV:L/AC:L/Au:/C:H/I:H/A:H,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",typescript:3.5.3,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?@angular-devkit\build-optimizer:0.803.26\typescript:3.5.3,TypeScript is a language for application scale JavaScript development,Apache-2.0,"","",pkg:npm/typescript@3.5.3,"",CVE-2021-1639,CWE-20 Improper Input Validation,Visual Studio Code Remote Code Execution Vulnerability,OSSINDEX,HIGH,7.8,/AV:L/AC:L/Au:/C:H/I:H/A:H,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",typescript:3.6.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?@angular-builders\custom-webpack:8.4.1\typescript:3.6.5,TypeScript is a language for application scale JavaScript development,Apache-2.0,"","",pkg:npm/typescript@3.6.5,"",CVE-2021-1639,CWE-20 Improper Input Validation,Visual Studio Code Remote Code Execution Vulnerability,OSSINDEX,HIGH,7.8,/AV:L/AC:L/Au:/C:H/I:H/A:H,"","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,CVE-2022-0691,CWE-639 Authorization Bypass Through User-Controlled Key,Authorization Bypass Through User-Controlled Key in NPM url-parse prior to 1.5.9.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,CVE-2022-0686,CWE-639 Authorization Bypass Through User-Controlled Key,Authorization Bypass Through User-Controlled Key in NPM url-parse prior to 1.5.8.,NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,1067316,"",url-parse prior to version 1.5.8 is vulnerable to Authorization Bypass Through User-Controlled Key.,NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,CVE-2021-27515,NVD-CWE-noinfo,url-parse before 1.5.0 mishandles certain uses of backslash such as http:\/ and interprets the URI as a relative path.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,CVE-2021-3664,CWE-601 URL Redirection to Untrusted Site ('Open Redirect'),url-parse is vulnerable to URL Redirection to Untrusted Site,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,CVE-2022-0512,CWE-639 Authorization Bypass Through User-Controlled Key,Authorization Bypass Through User-Controlled Key in NPM url-parse prior to 1.5.6.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,CVE-2022-0639,CWE-639 Authorization Bypass Through User-Controlled Key,Authorization Bypass Through User-Controlled Key in NPM url-parse prior to 1.5.7.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,1067315,"","Leading control characters in a URL are not stripped when passed into url-parse. This can cause input URLs to be mistakenly be interpreted as a relative URL without a hostname and protocol, while the WHATWG URL parser will trim control characters and treat it as an absolute URL.  If url-parse is used in security decisions involving the hostname / protocol, and the input URL is used in a client which uses the WHATWG URL parser, the decision may be incorrect.  This can also lead to a cross-site scripting (XSS) vulnerability if url-parse is used to check for the javascript: protocol in URLs. See following example: ````` const parse = require('url-parse') const express = require('express') const app = express() const port = 3000  url = parse(\""\\bjavascript:alert(1)\"")  console.log(url)  app.get('/', (req, res) => {  if (url.protocol !== \""javascript:\"") {res.send(\""<a href=\\'\"" + url.href + \""\\'>CLICK ME!</a>\"")}  })  app.listen(port, () => {  console.log(`Example app listening on port ${port}`)  }) `````",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,1067405,"",Authorization Bypass Through User-Controlled Key in NPM url-parse prior to 1.5.6.,NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,1067774,"","# Overview  Affected versions of npm `url-parse` are vulnerable to URL Redirection to Untrusted Site.  # Impact  Depending on library usage and attacker intent, impacts may include allow/block list bypasses, SSRF attacks, open redirects, or other undesired behavior.",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,1070014,"","A specially crafted URL with an '@' sign but empty user info and no hostname, when parsed with url-parse, url-parse will return the incorrect href. In particular, ````` parse(\""http://@/127.0.0.1\"") ````` Will return: ````` {  slashes: true,  protocol: 'http:',  hash: '',  query: '',  pathname: '/127.0.0.1',  auth: '',  host: '',  port: '',  hostname: '',  password: '',  username: '',  origin: 'null',  href: 'http:///127.0.0.1'  } ````` If the 'hostname' or 'origin' attributes of the output from url-parse are used in security decisions and the final 'href' attribute of the output is then used to make a request, the decision may be incorrect.",NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",url-parse:1.4.7,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\url-parse:1.4.7,Small footprint URL parser that works seamlessly across Node.js and browser environments,MIT,"","",pkg:npm/url-parse@1.4.7,cpe:2.3:a:url-parse_project:url-parse:1.4.7:*:*:*:*:*:*:*,1070424,"",url-parse before 1.5.0 mishandles certain uses of backslash such as http:\/ and interprets the URI as a relative path.,NPM,"","","","","","",HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",webpack-subresource-integrity:1.1.0-rc.6,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\webpack-subresource-integrity:1.1.0-rc.6,Webpack plugin for enabling Subresource Integrity,MIT,"","",pkg:npm/webpack-subresource-integrity@1.1.0-rc.6,cpe:2.3:a:webpack-subresource-integrity_project:webpack-subresource-integrity:1.1.0.6:*:*:*:*:*:*:*,CVE-2020-15262,CWE-345 Insufficient Verification of Data Authenticity,"In webpack-subresource-integrity before version 1.5.1, all dynamically loaded chunks receive an invalid integrity hash that is ignored by the browser, and therefore the browser cannot validate their integrity. This removes the additional level of protection offered by SRI for such chunks. Top-level chunks are unaffected. This issue is patched in version 1.5.1.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,LOW,3.7,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ws:6.2.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?webpack-dev-server:3.11.0\ws:6.2.1,"Simple to use, blazing fast and thoroughly tested websocket client and server for Node.js",MIT,"","",pkg:npm/ws@6.2.1,cpe:2.3:a:ws_project:ws:6.2.1:*:*:*:*:*:*:*,CVE-2021-32640,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"ws is an open source WebSocket client and server library for Node.js. A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server. The vulnerability has been fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff). In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",ws:6.2.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?webpack-dev-server:3.11.0\ws:6.2.1,"Simple to use, blazing fast and thoroughly tested websocket client and server for Node.js",MIT,"","",pkg:npm/ws@6.2.1,cpe:2.3:a:ws_project:ws:6.2.1:*:*:*:*:*:*:*,1070099,"","### Impact  A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.  ### Proof of concept  ```js for (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {   const value = 'b' + ' '.repeat(length) + 'x';   const start = process.hrtime.bigint();    value.trim().split(/ *, */);    const end = process.hrtime.bigint();    console.log('length = %d, time = %f ns', length, end - start); } ```  ### Patches  The vulnerability was fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff) and backported to ws@6.2.2 (https://github.com/websockets/ws/commit/78c676d2a1acefbc05292e9f7ea0a9457704bf1b) and ws@5.2.3 (https://github.com/websockets/ws/commit/76d47c1479002022a3e4357b3c9f0e23a68d4cd2).  ### Workarounds  In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.  ### Credits  The vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https://github.com/robmcl4) from University of California, Santa Barbara.",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",xmlhttprequest-ssl:1.5.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\xmlhttprequest-ssl:1.5.5,XMLHttpRequest for Node,"","","",pkg:npm/xmlhttprequest-ssl@1.5.5,cpe:2.3:a:xmlhttprequest-ssl_project:xmlhttprequest-ssl:1.5.5:*:*:*:*:*:*:*,CVE-2021-31597,CWE-295 Improper Certificate Validation,"The xmlhttprequest-ssl package before 1.6.1 for Node.js disables SSL certificate validation by default, because rejectUnauthorized (when the property exists but is undefined) is considered to be false within the https.request function of Node.js. In other words, no certificate is ever rejected.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.4,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",xmlhttprequest-ssl:1.5.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\xmlhttprequest-ssl:1.5.5,XMLHttpRequest for Node,"","","",pkg:npm/xmlhttprequest-ssl@1.5.5,cpe:2.3:a:xmlhttprequest-ssl_project:xmlhttprequest-ssl:1.5.5:*:*:*:*:*:*:*,1067903,"","The xmlhttprequest-ssl package before 1.6.1 for Node.js disables SSL certificate validation by default, because rejectUnauthorized (when the property exists but is undefined) is considered to be false within the https.request function of Node.js. In other words, no certificate is ever rejected.",NPM,"","","","","","",HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",xmlhttprequest-ssl:1.5.5,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\xmlhttprequest-ssl:1.5.5,XMLHttpRequest for Node,"","","",pkg:npm/xmlhttprequest-ssl@1.5.5,cpe:2.3:a:xmlhttprequest-ssl_project:xmlhttprequest-ssl:1.5.5:*:*:*:*:*:*:*,1068007,"","This affects the package xmlhttprequest before 1.7.0; all versions of package xmlhttprequest-ssl. Provided requests are sent synchronously (async=False on xhr.open), malicious user input flowing into xhr.send could result in arbitrary code being injected and run.",NPM,"","","","","","",HIGHEST,7
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",y18n:4.0.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\y18n:4.0.0,the bare-bones internationalization library used by yargs,ISC,"","",pkg:npm/y18n@4.0.0,cpe:2.3:a:y18n_project:y18n:4.0.0:*:*:*:*:*:*:*,CVE-2020-7774,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,"This affects the package y18n before 3.2.2, 4.0.1 and 5.0.5. PoC by po6ix: const y18n = require('y18n')(); y18n.setLocale('__proto__'); y18n.updateLocale({polluted: true}); console.log(polluted); // true",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",y18n:4.0.0,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?\y18n:4.0.0,the bare-bones internationalization library used by yargs,ISC,"","",pkg:npm/y18n@4.0.0,cpe:2.3:a:y18n_project:y18n:4.0.0:*:*:*:*:*:*:*,1070209,"","### Overview  The npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution.   ### POC  ``` const y18n = require('y18n')();  y18n.setLocale('__proto__'); y18n.updateLocale({polluted: true});  console.log(polluted); // true ```  ### Recommendation  Upgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",NPM,"","","","","","",HIGHEST,8
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",yargs-parser:11.1.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?protractor:5.4.4\yargs-parser:11.1.1,the mighty option parser used by yargs,ISC,"","",pkg:npm/yargs-parser@11.1.1,cpe:2.3:a:yargs:yargs-parser:11.1.1:*:*:*:*:*:*:*,CVE-2020-7608,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,"yargs-parser could be tricked into adding or modifying properties of Object.prototype using a ""__proto__"" payload.",NVD,MEDIUM,4.6,/AV:L/AC:L/Au:N/C:P/I:P/A:P,MEDIUM,5.3,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L,HIGHEST,6
scerevbowcl,"Mon, 30 May 2022 17:31:33 +0200",yargs-parser:11.1.1,C:\Users\2038\Desktop\Desktop\GitHub\SCEREV\export\scerevbowcl\package-lock.json?protractor:5.4.4\yargs-parser:11.1.1,the mighty option parser used by yargs,ISC,"","",pkg:npm/yargs-parser@11.1.1,cpe:2.3:a:yargs:yargs-parser:11.1.1:*:*:*:*:*:*:*,1068310,"","Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.   Parsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.    ## Recommendation  Upgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.",NPM,"","","","","","",HIGHEST,6
